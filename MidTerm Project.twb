<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='15' min='1' />
      </column>
    </datasource>
    <datasource caption='Electric_Vehicle_Population_Data' inline='true' name='federated.15fum0f0a6fmat12g29i00zqsl9s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electric_Vehicle_Population_Data' name='textscan.1vy9cla16lwjab0zxgchr1i7qm1p'>
            <connection class='textscan' directory='C:/Users/hriti/OneDrive/Projects/Tableau project' filename='Electric_Vehicle_Population_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1vy9cla16lwjab0zxgchr1i7qm1p' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='VIN (1-10)' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='integer' name='Postal Code' ordinal='4' />
            <column datatype='integer' name='Model Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
            <column datatype='integer' name='Electric Range' ordinal='10' />
            <column datatype='integer' name='Base MSRP' ordinal='11' />
            <column datatype='integer' name='Legislative District' ordinal='12' />
            <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
            <column datatype='string' name='Vehicle Location' ordinal='14' />
            <column datatype='string' name='Electric Utility' ordinal='15' />
            <column datatype='integer' name='2020 Census Tract' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1vy9cla16lwjab0zxgchr1i7qm1p' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='VIN (1-10)' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='integer' name='Postal Code' ordinal='4' />
            <column datatype='integer' name='Model Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
            <column datatype='integer' name='Electric Range' ordinal='10' />
            <column datatype='integer' name='Base MSRP' ordinal='11' />
            <column datatype='integer' name='Legislative District' ordinal='12' />
            <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
            <column datatype='string' name='Vehicle Location' ordinal='14' />
            <column datatype='string' name='Electric Utility' ordinal='15' />
            <column datatype='integer' name='2020 Census Tract' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIN (1-10)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VIN (1-10)]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>VIN (1-10)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOL Vehicle ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOL Vehicle ID]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>DOL Vehicle ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vehicle Location]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Vehicle Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk]&quot;' value='% of Total ' />
        </aliases>
      </column>
      <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
      </column>
      <column caption='Avg Electric Range ' datatype='real' name='[Calculation_1250593324915433473]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Electric Range])' />
      </column>
      <column caption='Total BEV Vehicles' datatype='integer' name='[Calculation_1250593324918788098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Electric Vehicle Type] = &quot;Battery Electric Vehicle (BEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column caption='% of BEV Vehicles' datatype='real' name='[Calculation_1250593324920131587]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1250593324918788098]/[Calculation_1250593324913975296]' />
      </column>
      <column caption='Total PHEV Vehicles ' datatype='integer' name='[Calculation_1250593324921745412]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Electric Vehicle Type] = &quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END&#13;&#10;)' />
      </column>
      <column caption='% of PHEV Vehicles' datatype='real' name='[Calculation_1250593324922511365]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1250593324921745412]/[Calculation_1250593324913975296]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
          <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
          <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
        </aliases>
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
          <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
        </aliases>
      </column>
      <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;AVG Producers&quot;'>
            <value>&quot;BMW&quot;</value>
            <value>&quot;FORD&quot;</value>
            <value>&quot;KIA&quot;</value>
            <value>&quot;TOYOTA&quot;</value>
            <value>&quot;VOLKSWAGEN&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
            <value>&quot;CHEVROLET&quot;</value>
            <value>&quot;NISSAN&quot;</value>
            <value>&quot;TESLA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Model]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Id' datatype='string' name='[VIN (1-10)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Electric_Vehicle_Population_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D]' role='measure' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[pcto:usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <group caption='Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)' hidden='true' name='[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' />
        </groupfilter>
      </group>
      <group caption='Action (Contributors)' hidden='true' name='[Action (Contributors)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Make (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Contributors,Make)' hidden='true' name='[Action (Contributors,Make)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Make (group)]' />
          <groupfilter function='level-members' level='[Make]' />
        </groupfilter>
      </group>
      <group caption='Action (EV Type,Make,Model)' hidden='true' name='[Action (EV Type,Make,Model)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Electric Vehicle Type]' />
          <groupfilter function='level-members' level='[Make]' />
          <groupfilter function='level-members' level='[Model]' />
        </groupfilter>
      </group>
      <group caption='Action (Make)' hidden='true' name='[Action (Make)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Make]' />
        </groupfilter>
      </group>
      <group caption='Action (Model Year)' hidden='true' name='[Action (Model Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Model Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Contributors, Make'>
          <field>[Make (group)]</field>
          <field>[Make]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Make (group)]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;LEAST Producers&quot;</bucket>
            </map>
            <map to='#5ea654'>
              <bucket>&quot;TOP 3 Producers&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;AVG Producers&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='palette'>
            <map to='#398949'>
              <bucket>&quot;Clean Alternative Fuel Vehicle Eligible&quot;</bucket>
            </map>
            <map to='#67af5c'>
              <bucket>&quot;Eligibility unknown as battery range has not been researched&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;Not eligible due to low battery range&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <filter class='quantitative' column='[Model Year]' filter-group='2' included-values='in-range'>
        <min>2011</min>
      </filter>
      <filter class='categorical' column='[State]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[State]' member='&quot;AK&quot;' />
            <groupfilter function='member' level='[State]' member='&quot;HI&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Electric_Vehicle_Population_Data.csv' id='Electric_Vehicle_Population_Data.csv_616CB25C1A70418792CD4CCCF2F7B11D'>
            <properties context=''>
              <relation connection='textscan.1vy9cla16lwjab0zxgchr1i7qm1p' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='VIN (1-10)' ordinal='0' />
                  <column datatype='string' name='County' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='integer' name='Postal Code' ordinal='4' />
                  <column datatype='integer' name='Model Year' ordinal='5' />
                  <column datatype='string' name='Make' ordinal='6' />
                  <column datatype='string' name='Model' ordinal='7' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
                  <column datatype='integer' name='Electric Range' ordinal='10' />
                  <column datatype='integer' name='Base MSRP' ordinal='11' />
                  <column datatype='integer' name='Legislative District' ordinal='12' />
                  <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
                  <column datatype='string' name='Vehicle Location' ordinal='14' />
                  <column datatype='string' name='Electric Utility' ordinal='15' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.15fum0f0a6fmat12g29i00zqsl9s'>
      <datasources>
        <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
      </datasources>
      <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
        <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
            <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
            <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
          </aliases>
        </column>
        <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
            <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
          </aliases>
        </column>
        <column datatype='string' name='[Model]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
        <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' context='true'>
        <groupfilter function='level-members' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]' context='true'>
        <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]' context='true'>
        <groupfilter function='level-members' level='[none:Model:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]' context='true'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:State:nk]' member='&quot;AL&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 10 Total Vehicles by Make ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles by CAFV Eligibility' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles by State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_33D88527F145421985251E781827707A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles by Model Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_91095B40861A40FF8192563B37FE6ABF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles by Model' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_7354E0070DC9490FA5DA7B98BE72B419]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total Vehicles' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_46CA7BBABF8B454985241D28E03448EE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Avg Electric Range' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_8B79064287C3456082E3B0713DFB41DE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total BEV Vehicles' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_3E819FF7F882489A97298FEAF7821D36]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Total PHEV Vehicles ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
          </datasources>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Avg Electric Range ' datatype='real' name='[Calculation_1250593324915433473]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Electric Range])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324915433473]' derivation='User' name='[usr:Calculation_1250593324915433473:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
            <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Electric Vehicle Type]' />
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324915433473:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Avg Electric Range</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324915433473:qk]> Miles]]></run>
                <run>Ã†&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2AA73979-AF9C-44C9-882A-B71F865EC234}' />
    </worksheet>
    <worksheet name='Top 10 Total Vehicles by Make '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Top &lt;</run>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>[Parameters].[Parameter 1]</run>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&gt; Total Vehicles by Make</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;AVG Producers&quot;'>
                  <value>&quot;BMW&quot;</value>
                  <value>&quot;FORD&quot;</value>
                  <value>&quot;KIA&quot;</value>
                  <value>&quot;TOYOTA&quot;</value>
                  <value>&quot;VOLKSWAGEN&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
                  <value>&quot;CHEVROLET&quot;</value>
                  <value>&quot;NISSAN&quot;</value>
                  <value>&quot;TESLA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[pcto:usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
            <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Electric Vehicle Type]' />
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='[Calculation_1250593324913975296]' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Make (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='140' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Make (group)]' value='128' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]' value='left' />
            <format attr='font-family' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]' value='Tableau Medium' />
            <format attr='font-size' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk]' />
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' />
              <color column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Make (group)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='8'>&lt;</run>
                <run fontname='Tableau Medium' fontsize='8'>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</run>
                <run fontname='Tableau Medium' fontsize='8'>&gt; ; &lt;</run>
                <run fontname='Tableau Medium' fontsize='8'>[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk]</run>
                <run fontname='Tableau Medium' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1334' />
                <format attr='maxwidth' value='1334' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Make (group)]</rows>
        <cols>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</cols>
      </table>
      <simple-id uuid='{4C73CBCB-DE0B-471A-BE2C-73D2B6A08EEA}' />
    </worksheet>
    <worksheet name='Total BEV Vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
          </datasources>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Total BEV Vehicles' datatype='integer' name='[Calculation_1250593324918788098]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Electric Vehicle Type] = &quot;Battery Electric Vehicle (BEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END&#13;&#10;)' />
            </column>
            <column caption='% of BEV Vehicles' datatype='real' name='[Calculation_1250593324920131587]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1250593324918788098]/[Calculation_1250593324913975296]' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324918788098]' derivation='User' name='[usr:Calculation_1250593324918788098:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1250593324920131587]' derivation='User' name='[usr:Calculation_1250593324920131587:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
            <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Electric Vehicle Type]' />
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324920131587:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324918788098:qk]' />
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324920131587:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total BEV Vehicles</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324918788098:qk]> ]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='14'><![CDATA[% of Total : <[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324920131587:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{33508207-4B64-43AC-9EC0-6B43A0683244}' />
    </worksheet>
    <worksheet name='Total PHEV Vehicles '>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
          </datasources>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Total PHEV Vehicles ' datatype='integer' name='[Calculation_1250593324921745412]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Electric Vehicle Type] = &quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END&#13;&#10;)' />
            </column>
            <column caption='% of PHEV Vehicles' datatype='real' name='[Calculation_1250593324922511365]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1250593324921745412]/[Calculation_1250593324913975296]' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324921745412]' derivation='User' name='[usr:Calculation_1250593324921745412:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1250593324922511365]' derivation='User' name='[usr:Calculation_1250593324922511365:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
            <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Electric Vehicle Type]' />
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324922511365:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324921745412:qk]' />
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324922511365:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total PHEV Vehicles</run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324921745412:qk]> ]]></run>
                <run>Ã†&#10;</run>
                <run fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='14'><![CDATA[% of Total : <[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324922511365:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7BC18E68-783A-40FE-AF28-F18C4202269D}' />
    </worksheet>
    <worksheet name='Total Vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
          </datasources>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
            <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Electric Vehicle Type]' />
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>Total Vehicles </run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7975B1CF-7C5B-4D56-93F9-2987E933266E}' />
    </worksheet>
    <worksheet name='Total Vehicles by CAFV Eligibility'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
          </datasources>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='AVG(0)' datatype='real' name='[Calculation_1250593324936785928]' role='measure' type='quantitative' user:unnamed='Total Vehicles by CAFV Eligibility'>
              <calculation class='tableau' formula='AVG(0)' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[pcto:usr:Calculation_1250593324913975296:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1250593324936785928]' derivation='User' name='[usr:Calculation_1250593324936785928:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Electric Vehicle Type]' />
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <wedge-size column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' />
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk:2]' />
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' />
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]>]]></run>
                <run>Ã†&#10;</run>
                <run fontname='Tableau Medium' fontsize='8'><![CDATA[<[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]> ; <[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk:2]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk] + [federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{3CCA2D45-1C13-4BEF-9C42-6D53AC77D74A}' />
    </worksheet>
    <worksheet name='Total Vehicles by Model'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
          </datasources>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[pcto:usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]&quot;</bucket>
              <bucket>&quot;[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
            <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MODEL Y&quot;</bucket>
              <bucket>&quot;MODEL 3&quot;</bucket>
              <bucket>&quot;LEAF&quot;</bucket>
              <bucket>&quot;MODEL S&quot;</bucket>
              <bucket>&quot;BOLT EV&quot;</bucket>
              <bucket>&quot;MODEL X&quot;</bucket>
              <bucket>&quot;VOLT&quot;</bucket>
              <bucket>&quot;ID.4&quot;</bucket>
              <bucket>&quot;NIRO&quot;</bucket>
              <bucket>&quot;PACIFICA&quot;</bucket>
              <bucket>&quot;WRANGLER&quot;</bucket>
              <bucket>&quot;MUSTANG MACH-E&quot;</bucket>
              <bucket>&quot;PRIUS PRIME&quot;</bucket>
              <bucket>&quot;X5&quot;</bucket>
              <bucket>&quot;I3&quot;</bucket>
              <bucket>&quot;FUSION&quot;</bucket>
              <bucket>&quot;EV6&quot;</bucket>
              <bucket>&quot;IONIQ 5&quot;</bucket>
              <bucket>&quot;C-MAX&quot;</bucket>
              <bucket>&quot;RAV4 PRIME&quot;</bucket>
              <bucket>&quot;R1T&quot;</bucket>
              <bucket>&quot;XC90&quot;</bucket>
              <bucket>&quot;BOLT EUV&quot;</bucket>
              <bucket>&quot;E-GOLF&quot;</bucket>
              <bucket>&quot;E-TRON&quot;</bucket>
              <bucket>&quot;XC60&quot;</bucket>
              <bucket>&quot;PRIUS PLUG-IN&quot;</bucket>
              <bucket>&quot;XC40&quot;</bucket>
              <bucket>&quot;R1S&quot;</bucket>
              <bucket>&quot;500&quot;</bucket>
              <bucket>&quot;CLARITY&quot;</bucket>
              <bucket>&quot;OUTLANDER&quot;</bucket>
              <bucket>&quot;F-150&quot;</bucket>
              <bucket>&quot;PS2&quot;</bucket>
              <bucket>&quot;I4&quot;</bucket>
              <bucket>&quot;GRAND CHEROKEE&quot;</bucket>
              <bucket>&quot;KONA ELECTRIC&quot;</bucket>
              <bucket>&quot;Q5 E&quot;</bucket>
              <bucket>&quot;HARDTOP&quot;</bucket>
              <bucket>&quot;A3&quot;</bucket>
              <bucket>&quot;SOLTERRA&quot;</bucket>
              <bucket>&quot;TAYCAN&quot;</bucket>
              <bucket>&quot;SORENTO&quot;</bucket>
              <bucket>&quot;IX&quot;</bucket>
              <bucket>&quot;330E&quot;</bucket>
              <bucket>&quot;SOUL&quot;</bucket>
              <bucket>&quot;530E&quot;</bucket>
              <bucket>&quot;SPORTAGE&quot;</bucket>
              <bucket>&quot;CAYENNE&quot;</bucket>
              <bucket>&quot;C40&quot;</bucket>
              <bucket>&quot;ESCAPE&quot;</bucket>
              <bucket>&quot;EDV&quot;</bucket>
              <bucket>&quot;ARIYA&quot;</bucket>
              <bucket>&quot;Q4&quot;</bucket>
              <bucket>&quot;X3&quot;</bucket>
              <bucket>&quot;TRANSIT&quot;</bucket>
              <bucket>&quot;SPARK&quot;</bucket>
              <bucket>&quot;FOCUS&quot;</bucket>
              <bucket>&quot;SOUL EV&quot;</bucket>
              <bucket>&quot;I-PACE&quot;</bucket>
              <bucket>&quot;IONIQ&quot;</bucket>
              <bucket>&quot;COUNTRYMAN&quot;</bucket>
              <bucket>&quot;KONA&quot;</bucket>
              <bucket>&quot;GLC-CLASS&quot;</bucket>
              <bucket>&quot;AIR&quot;</bucket>
              <bucket>&quot;EQS-CLASS SUV&quot;</bucket>
              <bucket>&quot;EQS-CLASS SEDAN&quot;</bucket>
              <bucket>&quot;E-TRON SPORTBACK&quot;</bucket>
              <bucket>&quot;EQB-CLASS&quot;</bucket>
              <bucket>&quot;IONIQ 6&quot;</bucket>
              <bucket>&quot;FORTWO ELECTRIC DRIVE&quot;</bucket>
              <bucket>&quot;AVIATOR&quot;</bucket>
              <bucket>&quot;Q5&quot;</bucket>
              <bucket>&quot;CX-90&quot;</bucket>
              <bucket>&quot;SANTA FE&quot;</bucket>
              <bucket>&quot;BZ4X&quot;</bucket>
              <bucket>&quot;TUCSON&quot;</bucket>
              <bucket>&quot;PANAMERA&quot;</bucket>
              <bucket>&quot;E-TRON GT&quot;</bucket>
              <bucket>&quot;EQE-CLASS SUV&quot;</bucket>
              <bucket>&quot;S60&quot;</bucket>
              <bucket>&quot;OPTIMA&quot;</bucket>
              <bucket>&quot;I8&quot;</bucket>
              <bucket>&quot;B-CLASS&quot;</bucket>
              <bucket>&quot;CORSAIR&quot;</bucket>
              <bucket>&quot;NX&quot;</bucket>
              <bucket>&quot;LYRIQ&quot;</bucket>
              <bucket>&quot;Q8&quot;</bucket>
              <bucket>&quot;GV60&quot;</bucket>
              <bucket>&quot;SONATA&quot;</bucket>
              <bucket>&quot;ELR&quot;</bucket>
              <bucket>&quot;EQE-CLASS SEDAN&quot;</bucket>
              <bucket>&quot;FORTWO&quot;</bucket>
              <bucket>&quot;CROSSTREK&quot;</bucket>
              <bucket>&quot;I-MIEV&quot;</bucket>
              <bucket>&quot;RAV4&quot;</bucket>
              <bucket>&quot;EQ FORTWO&quot;</bucket>
              <bucket>&quot;RZ 450E&quot;</bucket>
              <bucket>&quot;GLE-CLASS&quot;</bucket>
              <bucket>&quot;PRIUS&quot;</bucket>
              <bucket>&quot;740E&quot;</bucket>
              <bucket>&quot;V60&quot;</bucket>
              <bucket>&quot;S90&quot;</bucket>
              <bucket>&quot;RS E-TRON GT&quot;</bucket>
              <bucket>&quot;RANGE ROVER SPORT&quot;</bucket>
              <bucket>&quot;RANGE ROVER&quot;</bucket>
              <bucket>&quot;KARMA&quot;</bucket>
              <bucket>&quot;G80&quot;</bucket>
              <bucket>&quot;C-CLASS&quot;</bucket>
              <bucket>&quot;CT6&quot;</bucket>
              <bucket>&quot;TONALE&quot;</bucket>
              <bucket>&quot;A7&quot;</bucket>
              <bucket>&quot;S-CLASS&quot;</bucket>
              <bucket>&quot;GV70&quot;</bucket>
              <bucket>&quot;TRANSIT CONNECT ELECTRIC&quot;</bucket>
              <bucket>&quot;ACCORD&quot;</bucket>
              <bucket>&quot;ROADSTER&quot;</bucket>
              <bucket>&quot;745E&quot;</bucket>
              <bucket>&quot;CITY&quot;</bucket>
              <bucket>&quot;A8 E&quot;</bucket>
              <bucket>&quot;745LE&quot;</bucket>
              <bucket>&quot;FLYING SPUR&quot;</bucket>
              <bucket>&quot;BENTAYGA&quot;</bucket>
              <bucket>&quot;918&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[:Measure Names]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]' value='68' />
            <format attr='width' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]' value='96' />
            <format attr='width' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]' value='112' />
            <format attr='height' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[:Measure Names]' value='38' />
            <format attr='background-color' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[:Measure Names]' value='#a0d1ff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#a0d1ff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]' value='Tableau Medium' />
            <format attr='font-family' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]' value='Tableau Medium' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Tableau Medium' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' />
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk] / ([federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk] / [federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]))</rows>
        <cols>[federated.15fum0f0a6fmat12g29i00zqsl9s].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{166EE584-7B55-4D61-9226-1C8172BBD1E2}' />
    </worksheet>
    <worksheet name='Total Vehicles by Model Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
          </datasources>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
            <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Electric Vehicle Type]' />
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action3_59A1E796B1BC4909AD8D46AB57632B0C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' value='n#,##0,.0K;-#,##0,.0K' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]' value='bold' />
            <format attr='font-family' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]' value='Tableau Medium' />
            <format attr='font-size' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#75a1c762' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' value='(CAFV) Eligibility'>
              <formatted-text>
                <run>(CAFV) Eligibility</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <reference-line axis-column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Avg :&lt;Value&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='1' fontname='Tableau Semibold' fontsize='8'>&lt;</run>
                <run fontalignment='1' fontname='Tableau Semibold' fontsize='8'>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</run>
                <run fontalignment='1' fontname='Tableau Semibold' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-transparency' value='126' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk] + [federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk])</rows>
        <cols>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]</cols>
      </table>
      <simple-id uuid='{D14091BD-0F4D-490C-A4A0-72095F3E91C3}' />
    </worksheet>
    <worksheet name='Total Vehicles by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
            <column caption='Total Vehicles ' datatype='integer' name='[Calculation_1250593324913975296]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
                <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
              </aliases>
            </column>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250593324913975296]' derivation='User' name='[usr:Calculation_1250593324913975296:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
            <groupfilter function='level-members' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Electric Vehicle Type]' />
              <groupfilter function='level-members' level='[Make]' />
              <groupfilter function='level-members' level='[Model]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action1_E14503690A0C42BB9DDF4FCECF3D124E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Make)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]</column>
            <column>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' max='-6600364.2685175296' min='-15070312.323699826' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' />
              <text column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' />
              <lod column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]' />
              <geometry column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Semibold' fontsize='8'>&lt;</run>
                <run fontname='Tableau Semibold' fontsize='8'>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</run>
                <run fontname='Tableau Semibold' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]</rows>
        <cols>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9C3099B0-FF73-4251-98E1-769992BB0F22}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold' fontsize='22'>Electric Vehicle Data Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <_.fcp.IndividualControlFormatting.true...style-rule element='parameter-ctrl'>
          <_.fcp.IndividualControlFormatting.true...format attr='border-color' field='[Parameters].[Parameter 1]' value='#d4d4d4' />
          <_.fcp.IndividualControlFormatting.true...format attr='border-style' field='[Parameters].[Parameter 1]' value='solid' />
        </_.fcp.IndividualControlFormatting.true...style-rule>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Electric_Vehicle_Population_Data' name='federated.15fum0f0a6fmat12g29i00zqsl9s' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='15' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
        <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
            <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV Unknown ' />
            <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not Eligible' />
          </aliases>
        </column>
        <column caption='EV Type' datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Battery Electric Vehicle (BEV)&quot;' value='BEV' />
            <alias key='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' value='PHEV' />
          </aliases>
        </column>
        <column datatype='string' name='[Model]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
        <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='92555' id='5' param='vert' type-v2='layout-flow' w='85812' x='13688' y='6556'>
            <zone h='92555' id='6' type-v2='layout-basic' w='85812' x='13688' y='6556'>
              <zone h='13781' id='8' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='85812' x='13688' y='6556'>
                <zone h='13777' id='9' name='Total Vehicles' show-title='false' w='21500' x='13688' y='6556'>
                  <layout-cache fixed-size-h='127' fixed-size-w='201' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='13777' id='10' name='Avg Electric Range' show-title='false' w='21437' x='35188' y='6556'>
                  <layout-cache fixed-size-w='241' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='13777' id='11' name='Total BEV Vehicles' show-title='false' w='21438' x='56625' y='6556'>
                  <layout-cache fixed-size-w='241' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='13777' id='12' name='Total PHEV Vehicles ' show-title='false' w='21437' x='78063' y='6556'>
                  <layout-cache fixed-size-w='241' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='background-color' value='#e6e6e681' />
                </zone-style>
              </zone>
              <zone h='40996' id='14' param='horz' type-v2='layout-flow' w='85812' x='13688' y='20337'>
                <zone fixed-size='660' h='40996' id='15' is-fixed='true' name='Total Vehicles by Model Year' w='42000' x='13688' y='20337'>
                  <layout-cache minheight='176' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                  </zone-style>
                </zone>
                <zone h='40996' id='16' name='Total Vehicles by State' w='43812' x='55688' y='20337'>
                  <layout-cache minwidth='200' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='background-color' value='#e6e6e681' />
                </zone-style>
              </zone>
              <zone h='37778' id='18' param='horz' type-v2='layout-flow' w='85812' x='13688' y='61333'>
                <zone fixed-size='463' h='37778' id='19' is-fixed='true' name='Top 10 Total Vehicles by Make ' w='29688' x='13688' y='61333'>
                  <layout-cache has-max-size-w='true' maxwidth='1462' minwidth='1462' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                  </zone-style>
                </zone>
                <zone h='37778' id='23' name='Total Vehicles by CAFV Eligibility' w='23686' x='43376' y='61333'>
                  <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                  </zone-style>
                </zone>
                <zone fixed-size='507' h='37778' id='25' is-fixed='true' name='Total Vehicles by Model' w='32438' x='67062' y='61333'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='6' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='background-color' value='#e6e6e681' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='92555' id='13' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='13188' x='500' y='6556'>
            <zone h='10222' id='36' is-scaled='1' param='C:/Users/hriti/OneDrive/Documents/Pictures/Screenshots/Screenshot 2024-10-14 151522.png' type-v2='bitmap' w='12438' x='875' y='6556'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10222' id='26' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type-v2='filter' values='database' w='12438' x='875' y='16778'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10222' id='27' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]' type-v2='filter' values='database' w='12438' x='875' y='27000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10222' id='28' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]' type-v2='filter' values='database' w='12438' x='875' y='37222'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10223' id='29' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]' type-v2='filter' values='database' w='12438' x='875' y='47444'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10222' id='38' type-v2='empty' w='12438' x='875' y='57667'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10222' id='39' type-v2='empty' w='12438' x='875' y='67889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10222' id='37' type-v2='empty' w='12438' x='875' y='78111'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='10111' id='30' type-v2='empty' w='12438' x='875' y='88333'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='6' />
              <format attr='margin-top' value='0' />
              <format attr='background-color' value='#00ff7734' />
            </zone-style>
          </zone>
          <zone h='5667' id='3' type-v2='title' w='99000' x='500' y='889'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#00ff7734' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3556' id='22' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='8250' x='33938' y='62333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Bold' fontsize='22'>Electric Vehicle Data Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='85' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='84' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='5667' id='3' type-v2='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#00ff7734' />
                  </zone-style>
                </zone>
                <zone fixed-size='84' h='10222' id='36' is-fixed='true' is-scaled='1' param='C:/Users/hriti/OneDrive/Documents/Pictures/Screenshots/Screenshot 2024-10-14 151522.png' type-v2='bitmap' w='12438' x='875' y='6556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='112' h='13777' id='9' is-fixed='true' name='Total Vehicles' show-title='false' w='21500' x='13688' y='6556'>
                  <layout-cache fixed-size-h='127' fixed-size-w='201' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='112' h='13777' id='10' is-fixed='true' name='Avg Electric Range' show-title='false' w='21437' x='35188' y='6556'>
                  <layout-cache fixed-size-w='241' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='112' h='13777' id='11' is-fixed='true' name='Total BEV Vehicles' show-title='false' w='21438' x='56625' y='6556'>
                  <layout-cache fixed-size-w='241' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='112' h='13777' id='12' is-fixed='true' name='Total PHEV Vehicles ' show-title='false' w='21437' x='78063' y='6556'>
                  <layout-cache fixed-size-w='241' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='10222' id='26' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type-v2='filter' values='database' w='12438' x='875' y='16778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10222' id='27' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]' type-v2='filter' values='database' w='12438' x='875' y='27000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10222' id='28' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]' type-v2='filter' values='database' w='12438' x='875' y='37222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10223' id='29' mode='checkdropdown' name='Total Vehicles by Model Year' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]' type-v2='filter' values='database' w='12438' x='875' y='47444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40996' id='15' is-fixed='true' name='Total Vehicles by Model Year' w='42000' x='13688' y='20337'>
                  <layout-cache minheight='176' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40996' id='16' is-fixed='true' name='Total Vehicles by State' w='43812' x='55688' y='20337'>
                  <layout-cache minwidth='200' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37778' id='19' is-fixed='true' name='Top 10 Total Vehicles by Make ' w='29688' x='13688' y='61333'>
                  <layout-cache has-max-size-w='true' maxwidth='1462' minwidth='1462' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37778' id='23' is-fixed='true' name='Total Vehicles by CAFV Eligibility' w='23686' x='43376' y='61333'>
                  <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37778' id='25' is-fixed='true' name='Total Vehicles by Model' w='32438' x='67062' y='61333'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3556' id='22' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='8250' x='33938' y='62333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{714AD074-37F0-4105-80AC-FDCC395EFF5A}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='292' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='1' param='vert' removable='false' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='11222' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99000' x='500' y='889' />
            <zone h='87000' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99000' x='500' y='12111'>
              <flipboard active-id='9' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='The absolute view of clean vehicles in US with different makers in different states.' captured-sheet='Dashboard 1' id='9'>
                    <capturedDeltas>
                      <worksheet name='Total Vehicles by State'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='In 2011 only 800 vehicles are made However this number has been increased significantly and become 37 times in the year of 2023' captured-sheet='Dashboard 1' id='6'>
                    <capturedDeltas>
                      <worksheet name='Avg Electric Range'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
                          <column caption='Action (Model Year)' datatype='tuple' hidden='true' name='[Action (Model Year)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Top 10 Total Vehicles by Make '>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
                          <column caption='Action (Model Year)' datatype='tuple' hidden='true' name='[Action (Model Year)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total BEV Vehicles'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
                          <column caption='Action (Model Year)' datatype='tuple' hidden='true' name='[Action (Model Year)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total PHEV Vehicles '>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
                          <column caption='Action (Model Year)' datatype='tuple' hidden='true' name='[Action (Model Year)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
                          <column caption='Action (Model Year)' datatype='tuple' hidden='true' name='[Action (Model Year)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by CAFV Eligibility'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
                          <column caption='Action (Model Year)' datatype='tuple' hidden='true' name='[Action (Model Year)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
                          <column caption='Action (Model Year)' datatype='tuple' hidden='true' name='[Action (Model Year)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model Year'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run>37.1K Vehicles</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.387879'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>2023</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='37969.323636363639'>
                                  <node-reference>
                                    <axis>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='-198' y='43' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run>800 Vehicles</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.636364'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>2011</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='999.19272727272937'>
                                  <node-reference>
                                    <axis>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='77' y='-121' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='annotation'>
                            <format attr='fill-color' id='addedDelta_annotation_0' value='#a0d1ff74' />
                            <format attr='fill-color' id='addedDelta_annotation_1' value='#a0d1ffc1' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Total Vehicles by State'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
                          <column caption='Action (Model Year)' datatype='tuple' hidden='true' name='[Action (Model Year)]' role='dimension' type='nominal' user:auto-column='sheet_link' />
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' max='7242120.2476590574' min='2040973.1610339643' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' max='-4010220.4344938528' min='-15386697.97117829' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Almost 3 Quarters of Total_Vehicles are produced by Tesla ,NISSA &amp; CHEVROLET' captured-sheet='Dashboard 1' id='5'>
                    <capturedDeltas>
                      <worksheet name='Avg Electric Range'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Top 10 Total Vehicles by Make '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <fields>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Make (group)]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;TOP 3 Producers&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Total BEV Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total PHEV Vehicles '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by CAFV Eligibility'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model Year'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by State'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' max='7242120.2476590574' min='2040973.1610339643' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' max='-4010220.4344938528' min='-15386697.97117829' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The avg distance is covered by an Electric vehicle is 67.83 Miles which is quite facinating .' captured-sheet='Dashboard 1' id='7'>
                    <capturedDeltas>
                      <worksheet name='Avg Electric Range'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324915433473:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>67.830712770837621</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Top 10 Total Vehicles by Make '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total BEV Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total PHEV Vehicles '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by CAFV Eligibility'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model Year'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' field-type='quantitative' max='44932' min='-8914' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='1' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' field-type='quantitative' fold='true' max='44932' min='-8914' range-type='fixed' scope='rows' synchronized='true' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Total Vehicles by State'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' max='6907140.1043901946' min='1800507.208845275' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' max='-4265522.6108776946' min='-15435269.102695791' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='In Electric vehicles people have 2 choices for having an electric  vehicle either BEV which is battery type vehicle or PHEV which is Hybrid.It is clearly visible that BEV is the real monster in the field of E-vehicles ' captured-sheet='Dashboard 1' id='8'>
                    <capturedDeltas>
                      <worksheet name='Avg Electric Range'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Top 10 Total Vehicles by Make '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total BEV Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324918788098:qk]</field>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324920131587:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>116745</value>
                                <value>0.77616296463736512</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Total PHEV Vehicles '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by CAFV Eligibility'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model Year'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by State'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' max='7242120.2476590574' min='2040973.1610339643' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' max='-4010220.4344938528' min='-15386697.97117829' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Even Though the MODEL Y and MODEL 3 is launched in 2017 and 2020 respectively yet they have captured significant market proportion of the EV&apos;s which is around 37% which is quite surprising .   ' captured-sheet='Dashboard 1' id='1'>
                    <capturedDeltas>
                      <worksheet name='Avg Electric Range'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Top 10 Total Vehicles by Make '>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total BEV Vehicles'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total PHEV Vehicles '>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by CAFV Eligibility'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <fields>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;MODEL 3&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model Year'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontname='Tableau Medium' fontsize='8'>MODEL Y Launched in 2020</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.484848'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>2020</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='2307.761092150171'>
                                  <node-reference>
                                    <axis>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='10' y='-174' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontname='Tableau Medium' fontsize='8'>Model 3 Launched in 2017</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.487879'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>2017</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='135.33788395904418'>
                                  <node-reference>
                                    <axis>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='48' y='-152' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='annotation'>
                            <format attr='fill-color' id='addedDelta_annotation_0' value='#a0d1ffc9' />
                            <format attr='fill-color' id='addedDelta_annotation_1' value='#a0d1ffe6' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Total Vehicles by State'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' max='7242120.2476590574' min='2040973.1610339643' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' max='-4010220.4344938528' min='-15386697.97117829' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='TESLA is the one and  only manufacturer who produced EV&apos;s only in BEV which portrays its futuristic approach.Another shocking fact is that it has an avg of 121.4miles that makes him a complete beast.' captured-sheet='Dashboard 1' id='10'>
                    <capturedDeltas>
                      <worksheet name='Avg Electric Range'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
                            <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
                              <bin default-name='false' value='&quot;AVG Producers&quot;'>
                                <value>&quot;BMW&quot;</value>
                                <value>&quot;FORD&quot;</value>
                                <value>&quot;KIA&quot;</value>
                                <value>&quot;TOYOTA&quot;</value>
                                <value>&quot;VOLKSWAGEN&quot;</value>
                              </bin>
                              <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
                                <value>&quot;CHEVROLET&quot;</value>
                                <value>&quot;NISSAN&quot;</value>
                                <value>&quot;TESLA&quot;</value>
                              </bin>
                            </calculation>
                          </column>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='level-members' level='[Make (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors,Make)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' />
                            <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Top 10 Total Vehicles by Make '>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <rows>
                          <column delta-type='added' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]' index='1' />
                        </rows>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (EV Type,Make,Model)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action5_91095B40861A40FF8192563B37FE6ABF]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Electric Vehicle Type]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                            <groupfilter function='crossjoin'>
                              <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                              <groupfilter function='member' level='[Model]' member='&quot;MODEL 3&quot;' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <shelf-sort-deltas>
                          <shelf-sorts>
                            <shelf-sort-v2 dimension-to-sort='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' shelf='rows' />
                          </shelf-sorts>
                        </shelf-sort-deltas>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <fields>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Make (group)]</field>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;TOP 3 Producers&quot;</bucket>
                                  <bucket>&quot;TESLA&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Total BEV Vehicles'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
                            <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
                              <bin default-name='false' value='&quot;AVG Producers&quot;'>
                                <value>&quot;BMW&quot;</value>
                                <value>&quot;FORD&quot;</value>
                                <value>&quot;KIA&quot;</value>
                                <value>&quot;TOYOTA&quot;</value>
                                <value>&quot;VOLKSWAGEN&quot;</value>
                              </bin>
                              <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
                                <value>&quot;CHEVROLET&quot;</value>
                                <value>&quot;NISSAN&quot;</value>
                                <value>&quot;TESLA&quot;</value>
                              </bin>
                            </calculation>
                          </column>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='level-members' level='[Make (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors,Make)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' />
                            <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total PHEV Vehicles '>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
                            <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
                              <bin default-name='false' value='&quot;AVG Producers&quot;'>
                                <value>&quot;BMW&quot;</value>
                                <value>&quot;FORD&quot;</value>
                                <value>&quot;KIA&quot;</value>
                                <value>&quot;TOYOTA&quot;</value>
                                <value>&quot;VOLKSWAGEN&quot;</value>
                              </bin>
                              <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
                                <value>&quot;CHEVROLET&quot;</value>
                                <value>&quot;NISSAN&quot;</value>
                                <value>&quot;TESLA&quot;</value>
                              </bin>
                            </calculation>
                          </column>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='level-members' level='[Make (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors,Make)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' />
                            <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
                            <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
                              <bin default-name='false' value='&quot;AVG Producers&quot;'>
                                <value>&quot;BMW&quot;</value>
                                <value>&quot;FORD&quot;</value>
                                <value>&quot;KIA&quot;</value>
                                <value>&quot;TOYOTA&quot;</value>
                                <value>&quot;VOLKSWAGEN&quot;</value>
                              </bin>
                              <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
                                <value>&quot;CHEVROLET&quot;</value>
                                <value>&quot;NISSAN&quot;</value>
                                <value>&quot;TESLA&quot;</value>
                              </bin>
                            </calculation>
                          </column>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='level-members' level='[Make (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors,Make)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' />
                            <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by CAFV Eligibility'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
                            <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
                              <bin default-name='false' value='&quot;AVG Producers&quot;'>
                                <value>&quot;BMW&quot;</value>
                                <value>&quot;FORD&quot;</value>
                                <value>&quot;KIA&quot;</value>
                                <value>&quot;TOYOTA&quot;</value>
                                <value>&quot;VOLKSWAGEN&quot;</value>
                              </bin>
                              <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
                                <value>&quot;CHEVROLET&quot;</value>
                                <value>&quot;NISSAN&quot;</value>
                                <value>&quot;TESLA&quot;</value>
                              </bin>
                            </calculation>
                          </column>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='level-members' level='[Make (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors,Make)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' />
                            <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
                            <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
                              <bin default-name='false' value='&quot;AVG Producers&quot;'>
                                <value>&quot;BMW&quot;</value>
                                <value>&quot;FORD&quot;</value>
                                <value>&quot;KIA&quot;</value>
                                <value>&quot;TOYOTA&quot;</value>
                                <value>&quot;VOLKSWAGEN&quot;</value>
                              </bin>
                              <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
                                <value>&quot;CHEVROLET&quot;</value>
                                <value>&quot;NISSAN&quot;</value>
                                <value>&quot;TESLA&quot;</value>
                              </bin>
                            </calculation>
                          </column>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='level-members' level='[Make (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors,Make)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' />
                            <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <fields>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;MODEL 3&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model Year'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='level-members' level='[Make (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors,Make)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' />
                            <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontname='Tableau Medium' fontsize='8'>MODEL Y Launched in 2017</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.484848'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>2020</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='2307.761092150171'>
                                  <node-reference>
                                    <axis>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='10' y='-174' />
                          </annotation>
                          <annotation class='point' delta-type='added' id='1' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontname='Tableau Medium' fontsize='8'>Model 3 Launched in 2017</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.487879'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:ok]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>2017</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='135.33788395904418'>
                                  <node-reference>
                                    <axis>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='48' y='-152' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='annotation'>
                            <format attr='fill-color' id='addedDelta_annotation_0' value='#a0d1ffc9' />
                            <format attr='fill-color' id='addedDelta_annotation_1' value='#a0d1ffe6' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Total Vehicles by State'>
                        <datasource-dependencies datasource='federated.15fum0f0a6fmat12g29i00zqsl9s'>
                          <column caption='Contributors' datatype='string' name='[Make (group)]' role='dimension' type='nominal'>
                            <calculation class='categorical-bin' column='[Make]' default='&quot;LEAST Producers&quot;' new-bin='true'>
                              <bin default-name='false' value='&quot;AVG Producers&quot;'>
                                <value>&quot;BMW&quot;</value>
                                <value>&quot;FORD&quot;</value>
                                <value>&quot;KIA&quot;</value>
                                <value>&quot;TOYOTA&quot;</value>
                                <value>&quot;VOLKSWAGEN&quot;</value>
                              </bin>
                              <bin default-name='false' value='&quot;TOP 3 Producers&quot;'>
                                <value>&quot;CHEVROLET&quot;</value>
                                <value>&quot;NISSAN&quot;</value>
                                <value>&quot;TESLA&quot;</value>
                              </bin>
                            </calculation>
                          </column>
                          <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:ok]' pivot='key' type='ordinal' />
                        </datasource-dependencies>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors)]'>
                          <groupfilter function='level-members' level='[Make (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Contributors,Make)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Make (group)]' member='&quot;TOP 3 Producers&quot;' />
                            <groupfilter function='member' level='[Make]' member='&quot;TESLA&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Model Year)]'>
                          <groupfilter function='level-members' level='[none:Model Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Washington is the Enormous market for the US since it is single handedly consisits 99.77% of  total electric vehicles ' captured-sheet='Dashboard 1' id='2'>
                    <capturedDeltas>
                      <worksheet name='Avg Electric Range'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Top 10 Total Vehicles by Make '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total BEV Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total PHEV Vehicles '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by CAFV Eligibility'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model Year'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (State)]'>
                          <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by State'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true'>99.77% of Total vehicles </run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord axis-value='-13607433.051469503'>
                                  <node-reference>
                                    <axis>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]</axis>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='6061697.7071762756'>
                                  <node-reference>
                                    <axis>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                                <projection name='EPSG:3857' u='-122.23765087768193' v='47.727850603961947' />
                              </visual-coordinate>
                            </point>
                            <body x='-28' y='78' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                          <style-rule element='annotation'>
                            <format attr='fill-color' id='addedDelta_annotation_0' value='#a0d1ffe6' />
                            <format attr='rounding' id='addedDelta_annotation_0' value='small' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Last but not least ,CAFV[Clean alternative fuel vehicles ]unknown  which is 46.34%.The name is unknown because as we all  know EV&apos;s are the latest technology that&apos;s why its is still in  R&amp;D category .That&apos;s the reason it has been put under unknown category.' captured-sheet='Dashboard 1' id='11'>
                    <capturedDeltas>
                      <worksheet name='Avg Electric Range'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
                          <groupfilter function='member' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Top 10 Total Vehicles by Make '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
                          <groupfilter function='member' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total BEV Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
                          <groupfilter function='member' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total PHEV Vehicles '>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
                          <groupfilter function='member' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
                          <groupfilter function='member' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by CAFV Eligibility'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields>
                                    <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]</field>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324936785928:qk]</field>
                                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[pcto:usr:Calculation_1250593324913975296:qk:2]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Eligibility unknown as battery range has not been researched&quot;</value>
                                <value>69697</value>
                                <value>0.0</value>
                                <value>0.46337085225346214</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
                          <groupfilter function='member' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by Model Year'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
                          <groupfilter function='member' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Total Vehicles by State'>
                        <filter class='categorical' column='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Action (Clean Alternative Fuel Vehicle (CAFV) Eligibility)]'>
                          <groupfilter function='member' level='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' member='&quot;Eligibility unknown as battery range has not been researched&quot;' user:ui-action-filter='[Action2_15C07AB1A40F49B8A510A44D5BA41E6A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{546A9A30-5853-4EFE-AFE8-E8C4C4EB9072}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{453B6C41-E909-449D-95AC-F74EE8909469}' />
    </window>
    <window class='worksheet' name='Avg Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B826C971-14C4-4740-90E7-17FD48AECF3C}' />
    </window>
    <window class='worksheet' name='Total BEV Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324918788098:qk]</field>
                  <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324920131587:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>116745</value>
                <value>0.77616296463736512</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{7F811691-1956-48F3-B9FC-FD841B57C2E8}' />
    </window>
    <window class='worksheet' name='Total PHEV Vehicles '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{08F43F06-1532-4168-8E06-1AB28D90D533}' />
    </window>
    <window class='worksheet' name='Total Vehicles by Model Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F14A7B4-E994-437A-A766-CA5E940AA349}' />
    </window>
    <window class='worksheet' name='Total Vehicles by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{85A7974D-D01F-45BD-8C22-9407A7430A82}' />
    </window>
    <window class='worksheet' name='Top 10 Total Vehicles by Make '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]' type='filter' />
            <card param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[Make (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[Make (group)]</field>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]</field>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</field>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ADFF528B-C8C6-4C76-A73D-A837754CB634}' />
    </window>
    <window class='worksheet' name='Total Vehicles by CAFV Eligibility'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{573D7E54-B8C5-4381-8350-D3FCA012CB47}' />
    </window>
    <window class='worksheet' name='Total Vehicles by Model'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15fum0f0a6fmat12g29i00zqsl9s].[usr:Calculation_1250593324913975296:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Make:nk]</field>
            <field>[federated.15fum0f0a6fmat12g29i00zqsl9s].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CCFFAE2-22B6-4D49-B430-D3AC48F68A2B}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg Electric Range'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Top 10 Total Vehicles by Make '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total BEV Vehicles'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total PHEV Vehicles '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Vehicles'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Vehicles by CAFV Eligibility'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Vehicles by Model'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Vehicles by Model Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Vehicles by State'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{ED535C99-FCCF-46B3-BE28-DB38CD390E60}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0273E597-A538-4F62-803C-6F0A02C893AA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='81' name='Avg Electric Range' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Total Vehicles by Make ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAJ3klEQVR4nO3dy09c5xnH8e85Z64wA8wMF5shZowNGFdO67qKG9FUShfeNM0/0W66674b
      76NIVVdVN5GaTXfpNlKlRKoTtXYgru3aGHM14TJcZmBuMLcz3USVXMeNWigDPL/PdkZnnhfx
      HV4Q8x6n1Wq1EDHKbfcAIu104gJoNpvtHkEMOXEBiBwnBSCmKQAxTQGIaQpATFMAYpoCENMC
      7R7g381uzfDHv/+h3WOIEScugEq9zFJuod1jiBHaAolpCkBMUwBimgIQ0xSAmKYAxDQFIKYp
      ADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0176UPzi7CNypSZj
      Y5f4anmZaFeSnnCLla1dBs4P0dsVZm5unlBnguHXzrPw9DHVpsvo+DhBz3npBfL5HIlE8lgW
      I/LfeimAixeHOVgukF9bIT16he3FGbZLDsOjY6zOz9OXGCOVSrC2WQDOU/Nd0skQM7NLeF6D
      eMhjt1AiPTTE6to6jgOlSg3Pb+C6Pvlyg2Q8yOZ2gYG+ONlcjWiogROMc2k43YYvgVj2yi2Q
      6zo0mj6+36Ll13k2O8fQcIZWyycYjNBo1KAFhdwWWxWPVKTFa5mLlPerXL6Q4tHT51waHSMa
      cimVKhR298iXKoxdyrC8tAQtn0qlQjpzkc5IhINyGf8YFy4C33QukBdmINVNoqufubk5Ij0D
      JKIew11JQi406wdsbGyQ6u0HYHTiOySTScqFAuGAx/n+FMvZAjevj7G4uEBPqp9AYYeq18n5
      vjjzS88ZHRsju10k2ZsiHPKouy7Rzk5e3kCJ/H85J+0eYVMrd/ntnffaPYYYob8CiWkKQExT
      AGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExT
      AGKaAhDTFICYduJOhWg2m7iuupTj8fK5QCeA4+iEIDkeeqsV0xSAmKYAxDQFIKYpADFNAYhp
      CkBMUwBimgIQ0xSAmKYAxDQFIKYpADHtxP03aMNvsO+X2z3GqRQNdOI5XrvHOFVOXAA71U2m
      d+60e4xT6UfnbtETTrV7jFNFWyAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpA
      TFMAYpoCENMUgJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENO827dv337Vg9W9LH/7xzKpqE+u
      ArnNr6gdlJlfXKHabNEdjzF9769sbWYJxnsJOD4AtXqDgOdSrVZZXV0lHu+i1fKBFtVaHdd1
      qNYauC40Gk1aLZ96wyfgeRRrBdb3nx/T8s+WC7FLlHYrfPHFF8Tjcaampkin01SrVT755BMC
      gQD379+nu7ubmZkZ+vv7/3VHzq2tLaanp4nFYty9e5fBwUEODg749NNPaTabTE1NUa1WWVlZ
      IRQKEQwG8bzTfwTLfzwW5dn8Egf5Ms3ICHsrazg0qexXGRk+z+pWAYBorIfB3hhfLS2wFgrh
      1cs4rSatYBzHaeE3DpidWybgV8H1CUS68OtlGvUWHWGf7YMoscA+5arDd69NHMuiz7KDgwNy
      uRwfffQRvu8TjUYZGBggnU7jeR5DQ0N89tlnrK+vMzExQTabpVKpEA6HyWazJJNJKpUKy8vL
      eJ7H8PAwyWSS3d1dFhYWmJubo6enhxs3bnDt2rV2L/fQXhlAq+XTkRjgx1eTrO2UCLWKBHtG
      iHsl5pfW8EIRACKRMN19Q9Tra8QGzpFdmmOvWCaRiJDP7xGJRNkv5CjUHQbP9VCu1Qg5LZo4
      hDtiXB66QDG7SOXgAP/Yln123bt3D9d1eeutt5ienqZSqbC7u8vi4iLhcJhGo0FHRwfFYpGn
      T58SiUTo7Ozk888/p7Ozk7m5OarVKqVSCd/3WVlZIZPJkM1meeedd5ienqZYLLK5udnupR6J
      E3ej7LXSig7G+h9908FYm5ub9Pb2vvLm49/2+Fl34k6Gk6PV399/qMfPOpvZi3xNAYhpCkBM
      UwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBM
      UwBi2ok7FaJULZKvb7V7jFNpIJom5IXbPcapcuICaDabZ+LEMTkdtAUS0xSAmKYAxDQFIKYp
      ADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpJ+4meVPzD3nvT7879HUmJ37Ar372
      iyOYSM6yExdAoVLk/tLjQ18nnTp3BNPIWactkJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMU
      gJimAMQ0BSCmKQAxTQGIaQpATFMAYpoCENMUgJimAMQ0BSCmKQAx7YUPxe/s7JBIJilsb7C6
      ledc+gKB2h4HgR66g3UWnq+RSCTYXF8jEE9x9fIwC89mqDZdRsfHCLrOSy+wm8/Tk0gc24JE
      /hsvBLC9s01PIkl5t0g8lSIaDrGaLeKzT9VrEo310Nc/AOVdOoYzOA7Umg7pRJCZ2WUCboN4
      2CW/V2botSFWV9fAgVKlhuvX8TyfXKlBKh4iu7PHud4uNnI1OkJ1CMa5NJw+0sXV63Xef/99
      bt26xeuvv84HH3xAOBwmk8nw4MEDYrEY4+Pj3Lx5k4cPH5LJZPjwww959913GRwc5OOPPyaX
      y5FOp5mdnaVWq3HlyhX6+vq4fv36kc4q7fGNWyDHcQgEArjUWF/LsrGxQf+FEbqjDjNziy88
      t5DbYrPskQz7pIczlCo1RoeTPHiyzMjYONGQS7FUprC3R65YYfxyhuXlJfB9ypUyg8MZOiIR
      qpUy/hEvbn9/n1QqxZMnT9jf36der9NoNCiXy7zxxhtkMhkeP36M7/sMDg7SarUYHBxkZmaG
      er1OPp9ncnKSYrHIm2++SV9fH48ePeLLL7/E9496WmmHF34C9CW6eDozS28yzlY2i9vTzfdu
      ThJqltjdyZHL7zI0lCHQqBD8Op3LV66SSqUo7e0RCXqc60+wuF7gh98fZXFhnp5kH14hR9Xt
      YLAvztzCcy5dvszmTpFkKkU47LHrOEQ6Onh5A3U48Xic8fFxOjo6uHPnDlevXiUWi5HNZmk2
      m8RiMSYmJtjf32d6eprJyUni8TgjIyM8fPiQSCRCuVzGcRzq9Tpvv/02juPw7NkzXFe/Pp0F
      J+5G2X++/xd++ftfH/o6P73xE37z89uHH0jONL2NiWkKQExTAGKaAhDTFICYpgDENAUgpikA
      MU0BiGkKQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkKQExTAGKaAhDTFICYduJOhWg0GrSO
      4HwU13HwXO/wF5IzLfDtTzlejuMQ8PSNK8dDWyAxTQGIaQpATFMAYpoCENP+CdAHIdiB74cl
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='113' name='Total BEV Vehicles' width='192'>
      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
    </thumbnail>
    <thumbnail height='113' name='Total PHEV Vehicles ' width='192'>
      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
    </thumbnail>
    <thumbnail height='81' name='Total Vehicles' width='184'>
      iVBORw0KGgoAAAANSUhEUgAAALgAAABRCAYAAABheGyNAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWMklEQVR4nO2deVBUV9qHHy40DbQgCgFFQCNExQ1j0IgRnVGiQc3EfJGpLDOjiTGTMu7J
      OAxRQyjHOBWXmJgatYyVTSdxmWA0xgWI5hMxrkQUXDBAg4BsLZBuZOnb3x/I/Wi6we4GRDr3
      qaKKPn3uue+9/bvnvuc9m4PBYDAgI2OnCJ1tgIxMRyILXMaukQUuY9fIApexa2SBy9g1ssBl
      7BpZ4DJ2jSxwGbtGFriMXSMLXMaukQUuY9fIApexa2SBy9g1ssBl7BpZ4FZSlppKQvfu7HZw
      4HJcXKfYUJ2fz4GAAIttaGpzcng4dZWVVp3vclwcux0cSOjenbLUVBut7hw6XeCNN+9ef7b8
      MAB1lZUkh4e3qQxrqbp2jf29erHbwYHjkZHoq6tN8ujUar7r25fdDg4cCQ3tcJt+qzh1tgH2
      iFtAAB5Dh3Ln1i0qL11Cl5eH+4ABRnkq0tO5U1gIgM/EiR1qj1d4ODMqKjr0HA8qnV6DD4mL
      I9pgkP78o6MBUHh4MPHkSSl9YmoqCg+PTrbWMhxdXfEeNw6AmpISbl+4YJLnVmIiYl0dgkKB
      b2Tk/TbxN0OnC9xWbqelcXzSJPYqlex2cOBbX18uLFxI3e3bUp7LcXENfuOpUwCUnTol+aIH
      AgKozs8HGkSYuWoVhwcPlsrbq1SSOGoUxUlJNtnXa8oUFB4eGESRW4mJRt/pq6upSE8HwK1f
      PzwffRQAgyiS++WXfP/II+xxdGSPkxOJYWGS/Zbciz1OTpx4+mnp2sDYZ0/94x+NjjWIIreO
      HCFx1Cije5m2ZAl6ne6e11l5+bLR73CgTx+uf/ghBr3e+Jp1Oq78618c6NNHcjv3eXuTMmMG
      pSkp9zyPrXRJgat37iT5iScoTk5GrK0FoKa4mKyPPuLY736HLjfXqvKyPv6YSytWUJmZKZUn
      1taiOXuW1OhoSk+csNpG9wEDcOvXD4Dy06epLSuTvtPl5VF56RIAPUaOxKVXLwyiSEZ8PGdm
      zeLXrCwMoohBr0dz7hzHJ02i8LvvzJ7nxr//TWJYmHQvDHo9hQcOcH7+fMS6ulZtbDzn/0ZF
      oTl71uhe5u/ZQ215eavHl544wQ8REUa/Q3VBAT8vWcKFBQswiCIAYl0d5+fNIz0mhuqCAun4
      2rIyCvbt4/rGja2epy10OYFrs7O5tHw5ep0Oz9BQpmRkMLO+nrBPPkFQKrn9889krl6NQRQZ
      EhfHjIoKvMaMAcBrzBhmVFQQbTAwPS8PV39/AByVSvyjo4k8c4bnamqYqdfzxL59OPfoQa1G
      Q9amTdKPZSnOXl6Sb63LyaHq2jXpu9sXLlBTUoKDINBryhQcBIHSH3/k2tq1GESRwBde4NnK
      Sp4uKMBr7Fj0Oh2XV640KzhVv35EHDrE/+h0PF1YSPfhwwGoysy8p0ALv/uOK2vWYBBFej7+
      OFHXrjXcm5s3CZ43D8HZucVja8vLSVu0iFqNhm5BQUxOT+e5mhpC3n4bgNzPP6f0xx8lWwoO
      HACQrm2mXs80tZoRGzbgdvd36Ai6nMAL9u1Dm52NoFAw5N138QgJwcHRkX6zZxP44osAFB44
      gPbGDYvLHPSPfxC+axc9wsIQnJ0bhBcVhdfYsQDocnOp//VXq231jYxEUCioq6yk/KefpPRb
      iYkYRBHlQw/h9cQTAOTu2EG9Vournx9D3n0XJ3d3XHr3ZtCyZQgKBVVXr1Jx8aLJOXpFReEb
      GYmjqysuvXrhPnAgAPU6HYZWanCxro7sTz5BrKnBpXdvRn/6Kd0eeQQAVz8/Bv3jHyh9fFo8
      viw1lYr0dBwEgZC336b70KEIzs4EzZuHKiiIeq2WwoMHG2zRaiVbVEFBOKpUOAgCbgEBPLJ4
      MaHr11t5Zy2nywm8/MwZAJS+vvR47DEp3UEQpMZaTUmJUY15Lwx6Pfl79pD0+OP8182twQd3
      dm7RLbCU7sOG4dK7N/D/jcrasjLKT58GwGPoUNwCAgCounIFALfAQJS+vlIZ7iEhOPfsSb1W
      y69ZWW2ypyk1xcVU/Pwz0BBl6dYsynMvbqelIdbV4dStG+6DBknpyocekiJGlRkZiHV1dAsK
      kt6WmatW8X1wMGlLllB28qTk2nQUXS5M2JpfKSgUUh5LGkiNec+//jo5n35qtRtyL1z9/fEK
      D0enVkthweqbN9Hl5AANDVFHV1cADPX1wP83hM2ha9JwbDMGA+Ldczo4OuIgWFfXNf4OdZWV
      JN990zWntqwMfXU1Sh8fHtu6ldN/+hPanBy02dlc/+ADrn/wAS69exO2bRu9p05t2/W0QJer
      wRtFbI7Gmy4oFDi6uVlUXlVmJjf37cMgivhOnsxTmZnM1OuNQpa20vStcqewkIr0dMp/+om6
      ykoUHh5SKLFTcHBAcGqo3wx6fbs/3M3xfuIJorKyeDItjeHvv49naCgOjo7cKSwkbfFio8Zn
      e9LlavCeo0ah3rmTmlu30Jw7J736mobjmr4m70XV1avUlpXh5O7O4BUrjF637YH3+PG4+Ppy
      59YtSlNSqLp6FYBuwcGSvwyg6t+fslOn6D5sGOOPHsWliZvSESh9fOgeGoo2J4fyU6fQ3rgh
      +eCW4Dl8OA6CgKBUMva//6XXU0+1mLdpxeMZGopnaCgD33qLnM8+49zcudTcuoUuNxdXP782
      X1dzulwN7vfMM6gefhixro702FgqMzMx6PXc+Phj1Dt3AtB7+nRUQUFAQ6eLs5cX0OATFicn
      YxDFhoaPXo9zz544urpSX1VF4cGDGPR6akpKuBwXx62jR9tsb2OvJkDuZ59JkQXv8eNx7tlT
      yhfw/PMISiUV6emc/stfqLpyRQoVVl29yqW336bo0KE229OIoFDw8Jw5CEol1QUFnJ8/n1+v
      XwcaQn1ZH31ETXFxi8c3+u366mrOzp1LwbffGoUZcz//nEsrVgCgOXuWoyNGcP2DD9Dl5WEQ
      RcTaWn69fr0hXi4IODg6ttu1NaXL1eCqhx9m6KpVnJ07l8qMDA4PHmz0vWdoKCGxsZJPKSgU
      9P3zn7mVmEhdZSUnn30WaPCPJ6Wm4vnoo3iEhKA5f54r773Hlffek75XenkZdRzZgqOrK72m
      TKE4KUl6DZvrvew1eTKBzz9P7hdfcOvIEQ6FhJiUFb5rV5tsaU7vadMYvHx5w8N85AjfN3nr
      ufr70+fuvTKHS+/eDF6xgrNz51Kdn0/KM8+Y5Gnq4lXn55O2ZAlpS5aY5PObPh3PDhqP0+Vq
      cIDAF19kYkoKPhMnSrFapY8PwQsW8Ltjx3Dr29cov390NGHbttEtOBgHQcBBEFB6eeHg6Ihz
      z56M+fprvMaOxcHREUdXV/q/9hpT0tPxHDmyXez1HjfOaJhB097LRgSlkrBPPiFs+3bcBw6U
      ajTB2RnPESN49MMP8X3yyXaxpxEHQWBQbCwRBw9KIVJouJf+M2cavWHM0fg7NIYpG8t0Cwgg
      eMEChsbHA9Bz9GjGJiTg98wz0tu0Md+wNWt4bMsWBKWyXa9NukZ5dVkZe6ZL1uAyMpYiC1zG
      rpEFLmPXyAKXsWtkgcvYNbLAZewaWeAydo0scBm7Rha4jF0jC1zGrpEFLmPXyAKXsWtkgcvY
      NbLAZewaWeAydo0scBm7Rha4jF0jC1zGrum0Scc6nY5du3axY8cONBoNPj4+fPrpp/i0slyY
      rajVal599VXK77FWnzkstevOnTscOnSIAwcOcP36dbRaLQAqlYpBgwYRHR3NhAkTULSyrkt7
      odVqmT9/Pul3V7A1x5o1a4i0YdlmjUbDtm3b2L9/PzqdjmHDhrFp0yZUKpVFx4uiSFZWFseO
      HeP06dOo1Wpu376NeHddFoVCgZeXF8OGDSMqKorw8PA23bP7LvDi4mK2bdvGwYMHuXPnzn05
      Z3l5eYedSxRFTpw4QXx8PLfNzMDXarWcO3eOc+fO4efnR2xsLGPuLgbaUSQlJXH58uV2LfPG
      jRts2bKFY8eOSWK0hrKyMjZu3EhSUhI1NTUt5qurq6OoqIiioiKOHj2Ku7s7b775JlOnTkWw
      cvUtuI8Cv3HjBhs3buTUqVM23aC2UFpais7CpdysQRRFvvzySzZv3kytBWvsFRQUsHTpUpYv
      X87UDlqqTKPR8NVXX7XLPRZFkbS0NDZs2MDVq1fbVObNmzc5fvx4q+I2R1VVFfHx8eTl5fHX
      v/7VapF3qMBFUeT8+fNs3LixzTeoLfzyyy8dUm5iYqLF4m6ktraWtWvX4ufnx4gRI9rdph9+
      +IGsNi7SWVdXR3JyMlu2bEGtVreTZbYjiiJffPEFQUFBTJ482apjO1Tgly5d4s0335T80c6i
      +Y+kVCrZsGEDo0ePtrnM0tJStm7daiLu/v3788477xASEoJeryc1NZU1a9ZQ3GSVqMrKSjZu
      3GiV72qpTTt37jSqSBYuXEhGRgaJzXaZaI3jx4/z9t11vjsCDw8Pxo0bx+TJkxk8eDCenp4I
      goAoiuTl5bFjxw4TF7a2tpa9e/cSERGB6901WCzhvkdRFAoFo0ePbtcftjVqampMGpdOTk64
      uLi0qdyDBw+Sc3eV2Eb8/f1Zv349Q4YMQRAEFAoF48ePZ+3atfTo0cMo7+XLl0mycXuUljh8
      +LDRwxwYGEhUVFS7lO3m5kZYWBhKGxfocXR0JCwsjM2bN5OYmEh8fDzjxo2jZ8+ektshCAJ9
      +/YlNjaW2NhYnJstwJ+Xl4dGo7HqvPdN4D4+PsTExJCUlERcXNx9E/idO3dMbopKpaJXr142
      l6nVavnhhx+M0gRB4JVXXsHfzG4FgwcP5umnnzZKE0WR5ORk6u8uYdxWSkpK2Lt3r1HtPWPG
      DB566KE2lRsUFMSaNWtISkpi3rx5ODnZ9tIfMmQI69atIywszCI/OiIigkeaLQaq1WopLS21
      6rwd6qI0PrUvvPACI0eOlC7sVxt2S7AVrVZLRbMt9Lp3725zTQQNjcXmbo+/vz/h4eEtHjN5
      8mQSEhKobLJPZ0ZGBgUFBQQGBtpsSyPff/99u9XeCoWCyMhIXnnlFYKDg22KXnQEKpUKb29v
      q47pUIE3PrWdSXFxsckDpVKp2hRbzc3NNXlogoOD8bq77p45+vTpQ0BAgFH4rrKyErVa3WaB
      FxQUsGfPHumzIAg899xzNtfeEyZMYMKECW2yqa1kZGSYBAcCAgJMXL178WA8mh2IuRCht7c3
      bhYukG8Oc1GZe9V07u7u9L67nUkj9fX17RKlOHDgAAVNFpAPDAxkypQpbS63MxBFkZMnT/Lu
      u+9S3WSHaGdnZ1566SWrGpjQBZdPthZzYkxMTCQsLEz63Nh7NnjwYCZMmMDvf//7Vh8Ac6K0
      pBbu37+/SVpb3TW1Ws0333wjfRYEgWeffdbqV3lnUlFRQWFhIWfOnGH//v3k5OQYtSUEQWDO
      nDmMs2FHDLsXuCU1ZNPes+TkZFatWsW0adNYtGgR7u7uJvnNNQxtbXy1JUYviiJ79+6lpKRE
      SusKtXdiYiIxMTEW5fX09GTlypWMGzfuwe7J7AzMhQgtoa6ujoSEBNLS0li7di397m7o+qCh
      Vqs5fPiw9Lkr1t4t4efnx+zZs5k6dWqbQrp27YMrlUpmzpxps7+dk5NDXFycUeTjQUEURXbu
      3GkUNusKtbelFBUV8c0333DixAnq7rFjc2vYdQ0OMHHiRCbe3XHYHDU1NWRnZ7Nnzx4OHTpk
      MigrIyOD/fv389JLL3WIfba6NllZWUaxeHuqvaHhAc7MzCQmJgZvb29iY2NtclPsuga3BKVS
      yaBBg1i+fDnbt283iXSIokhKSorRICFzorS1w8aWEKEoinz11VdGHVjBwcEdNoCrvYmMjOTs
      2bPS3/Hjx0lISCA+Pp4JEyaY9FGUlpYSExPDIRs24frNC7wpAwYMYNasWSbp+fn5RnFvc6K0
      pDFrrkFpy/j3S5cuGXXzC4LAzJkzrY4RPyioVCr8/f2ZOnUq69atIykpiVmzZhnV1rW1tWzY
      sIFrVuxgDb8BF8VaBgwYgEqlMhog1rx2box5Nw1lZWRkUF9f36LLUVVVRWFhoVGaUqnEz8q9
      Ievr69m1a5eRfaIosnr1alavXm1xOU2jGLZOfugoXFxceOONN9BoNHz77bdSukaj4dixYwyw
      YttxuQa3gYCAAJPwoVqtbnUg0M2bN8nLyzNK69Gjh9UuSnl5OefPn7fqmK6IIAiMNbNFuLVh
      VbsWeHFxMbm5uVYdk5aWZjK8t/nYFX9/f4KDg43y5Ofnk5qa2mK5R44cMYnGDBw40G4aha1R
      X19vUxulPcYsdVmBf/jhh4SFhRn9NR/zXFRUxMsvv8zChQu5du3aPSdcXLt2jd27d5ukDxky
      hO7du0ufXV1dmTZtmpGPKIoi27dvJz8/3+T4tLQ0EhISjNKcnJz4wx/+YOLSqNVqoqKijK7r
      5Zdf7vQx9W0hIyODmTNn8vXXX1s8s6qwsJCdd3euboq53uDW6JI+eEVFRau1ZVP0ej0nT57k
      5MmT+Pn5MX36dCIjI+nTpw9KpRJRFCkpKWHfvn385z//oaqqyuh4V1dXs6PyIiIiCA4ONmr0
      5Ofns3TpUpYtW8bIkSONJjw0r72HDRtmNFygkfPnzxv1TDbHx8eHgwcPWnTtjcTExJg8/Pfb
      79ZoNLz//vusW7eOoUOHEhkZyZgxY/D19ZWGTouiSFFREUlJSWzfvt3sb/HYY49Zdd4OE3hx
      cTGzZ882mslyr/zmwlwqlYqPPvqI4cOHS2np6elkZ2cb5XN2dr5nh05BQQFbt25l69atFtkE
      EBUVxaPNdiWGBv950aJFvPXWW0aDgn755Rdef/31Vsv08PDgjTfeMBkTX1NTw5EjR0zyu7u7
      2xwvt5aLFy+yYMECi98Y6enpZkcetrQagSiKXLx4kYsXL1pt26RJkwi1csvvLueitDRRIDo6
      ul1nqwuCwNSpU1m6dGmLnQujRo1i0aJFJjNPWsPFxYVly5aZnY+ZnZ3NlStXjNK8vb1ZunRp
      m8avd3UEQeDJJ59k2bJlVj/oXU7gZWVlpKWlGaWNGDGCOXPmmAhx6NChbN682eJZJI306NGD
      5cuXExcX1+o4iMb48/r16y0K9/n5+fHxxx/z1FNPmf3+9OnTRq6Ms7MzCxcufGDHwlhKnz59
      iIiIsGkMvo+PDytXruSf//ynTUMuupwPfuHCBaOGnIeHB/Pnz8fDw8MkryAIhISEsHnzZnQ6
      HSkpKSQnJ5Oenk5ZWZk0xqGti82MGTOGXbt2kZyczL59+7hy5YrVC/+YmwYXGRn5QMWnbcXL
      y4tVq1bxzjvvkJmZyalTpzh9+jQFBQVoNBqjsSYqlQpfX1/GjBnD9OnT2zyjyMFgMBja4yLu
      B/X19fz973/n+PHjQIOAX3vtNV599dVOtqztnDt3jsWLF0v+fGBgIJs2bbK6I0jGmC7lohQU
      FJCRkSF9HjVqVIcNgrrfpKSkSOJ2dnZm8eLFsrjbgS4l8BMnTkghNG9vb/72t79ZPYXpQeXY
      sWPS/9HR0TbNXpExpcsIvLq6WnJN7KXx1ZTGOZUtNZhlbKPL3MXc3FyuX78O2E/jqxFRFKmv
      r2+1wSxjG12qkSkjYy3/B4QOS5maEbaaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by CAFV Eligibility' width='192'>
      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
      iR0fAMvMiwYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by Model' width='192'>
      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
      waQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by Model Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by State' width='192'>
      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
      BGKF+/8BORAay7moJsUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
